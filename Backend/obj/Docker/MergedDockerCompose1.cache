name: dockercompose1879200335078160807
services:
  backend:
    build:
      context: C:\VSProjects\React\TryingSolo1\Backend\Shedule
      dockerfile: Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Shedule
      target: base
    container_name: Shedule
    depends_on:
      mssql:
        condition: service_started
        required: true
      redis:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: shedule:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net8.0/Shedule.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    links:
      - redis
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "5001"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\zelen\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\zelen\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\VSProjects\React\TryingSolo1\Backend\Shedule
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\VSProjects\React\TryingSolo1\Backend\Shedule
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\zelen\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\zelen\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\zelen\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\zelen\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  client:
    build:
      context: C:\VSProjects\React\TryingSolo1\Frontend\TryingSolo.Frontend
      dockerfile: Dockerfile
    image: client
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4000
        published: "4000"
        protocol: tcp
  mssql:
    container_name: mssql-db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_DATA_DIR: /var/opt/mssql/data
      MSSQL_PID: Developer
      MSSQL_SA_PASSWORD: Admin@123
      MSSQL_TCP_PORT: "1433"
    hostname: mssql-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1400"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\VSProjects\React\TryingSolo1\Backend\data
        target: /var/opt/mssql/data
        bind:
          create_host_path: true
      - type: bind
        source: C:\VSProjects\React\TryingSolo1\Backend\log
        target: /var/opt/mssql/log
        bind:
          create_host_path: true
      - type: bind
        source: C:\VSProjects\React\TryingSolo1\Backend\secrets
        target: /var/opt/mssql/secrets
        bind:
          create_host_path: true
  redis:
    container_name: redisCache
    image: redis:latest
    networks:
      default: null
    restart: always
networks:
  default:
    name: dockercompose1879200335078160807_default